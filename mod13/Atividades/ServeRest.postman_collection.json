{
	"info": {
		"_postman_id": "6c6b9e5e-b67a-4324-b3dd-a44330effe64",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8379998"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"var token = _responseBody.authorization.replace(\"Bearer \", \"\");",
									"pm.environment.set(\"bearer_token\", token);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{myUserMail}}\",\n  \"password\": \"{{myUserPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "cadastrar usuário duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json()",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Error message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Este email já está sendo usado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{myUserName}}\",\n  \"email\": \"{{myUserMail}}\",\n  \"password\": \"{{myUserPass}}\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastrar usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"pm.environment.set(\"user_last_id\", _responseBody._id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Error message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Cadastro realizado com sucesso\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{$randomFullName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"password\": \"{{myUserPass}}\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar todos usuários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"",
									"pm.test(\"Check response code\", () =>  {",
									"    pm.expect(pm.response.code).to.be.equal(200);",
									"});",
									"",
									"pm.test(\"Test data type of the response\", () => {",
									"  pm.expect(_responseBody).to.be.an(\"object\");",
									"  pm.expect(_responseBody.usuarios).to.be.an(\"array\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar um usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"",
									"pm.test(\"Check response code\", () =>  {",
									"    pm.expect(pm.response.code).to.be.equal(200);",
									"});",
									"",
									"pm.test(\"Test data type of the response\", () => {",
									"  pm.expect(_responseBody).to.be.an(\"object\");",
									"});",
									"",
									"pm.test(\"Check values\", () => {",
									"    pm.expect(_responseBody.nome).to.eql(pm.environment.get(\"myUserName\"));",
									"    pm.expect(_responseBody.email).to.eql(pm.environment.get(\"myUserMail\"));",
									"    pm.expect(_responseBody.password).to.eql(pm.environment.get(\"myUserPass\"));",
									"    pm.expect(_responseBody.administrador).to.be.eql(\"true\");",
									"    pm.expect(_responseBody._id).to.eql(pm.environment.get(\"myUserId\"));",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{myUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{myUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar um usuario inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"",
									"pm.test(\"Check response code\", () =>  {",
									"    pm.expect(pm.response.code).to.be.equal(400);",
									"});",
									"",
									"pm.test(\"Error message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Usuário não encontrado\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{myUserId}}K8HFA",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{myUserId}}K8HFA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json()",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Error message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Registro excluído com sucesso\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{myUserName}}\",\n  \"email\": \"{{myUserMail}}\",\n  \"password\": \"{{myUserPass}}\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{user_last_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{user_last_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar usuário inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json()",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Error message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Nenhum registro excluído\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{myUserName}}\",\n  \"email\": \"{{myUserMail}}\",\n  \"password\": \"{{myUserPass}}\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{user_last_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{user_last_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Listar produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Samsung 60 polegadas\");",
									"});",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							],
							"query": [
								{
									"key": "_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "nome",
									"value": null,
									"disabled": true
								},
								{
									"key": "preco",
									"value": null,
									"disabled": true
								},
								{
									"key": "descricao",
									"value": null,
									"disabled": true
								},
								{
									"key": "quantidade",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"pm.environment.set(\"product_last_id\", _responseBody._id);",
									"",
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");",
									"});",
									"",
									"pm.test(\"Status code é 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Razer Basilisk V3\",\n  \"preco\": 500,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar Produto duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"á existe produto com esse nome\");",
									"});",
									"",
									"pm.test(\"Status code é 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Razer Basilisk V3\",\n  \"preco\": 500,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");",
									"});",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Razer Basilisk V3 - Preto\",\n  \"preco\": 499,\n  \"descricao\": \"Mouse Gamer\",\n  \"quantidade\": 49\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos/{{product_last_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								"{{product_last_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/produtos/{{product_last_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								"{{product_last_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Produto Duplocado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validar a mensagem\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/produtos/{{product_last_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								"{{product_last_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Carrinhos",
			"item": [
				{
					"name": "Adicionar Carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"pm.environment.set(\"cart_last_id\", _responseBody._id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Check message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Cadastro realizado com sucesso\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"produtos\": [\n    {\n      \"idProduto\": \"{{product_caboC_id}}\",\n      \"quantidade\": 2\n    },\n    {\n      \"idProduto\": \"{{product_keyboard_id}}\",\n      \"quantidade\": 1\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Lista carrinhos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "get meu carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _cart = pm.response.json().carrinhos;",
									"var _itens = pm.response.json().carrinhos[0].produtos;",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Number of carts', function () {",
									"    pm.expect(_cart.length).to.equal(1);",
									"});",
									"",
									"pm.test('Number of itens', function () {",
									"    pm.expect(_itens.length).to.equal(2);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos?_id={{cart_last_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{cart_last_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get meu carrinho inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check empty return\", function () {",
									"    pm.expect(_responseBody.quantidade).to.be.eql(0);",
									"    pm.expect(_responseBody.carrinhos.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos?_id={{cart_last_id}}o03un",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{cart_last_id}}o03un"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso. Estoque dos produtos reabastecido\");",
									"});",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"cancelar-compra"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Carrinho - sem carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check return\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Não foi encontrado carrinho para esse usuário\");",
									"});",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"cancelar-compra"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adicionar Carrinho 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var _responseBody = pm.response.json();",
									"pm.environment.set(\"cart_last_id\", _responseBody._id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Check message\", () => {",
									"    pm.expect(_responseBody.message).to.include(\"Cadastro realizado com sucesso\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"produtos\": [\n    {\n      \"idProduto\": \"{{product_caboC_id}}\",\n      \"quantidade\": 1\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Concluir compra",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");",
									"});",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/concluir-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"concluir-compra"
							]
						}
					},
					"response": []
				},
				{
					"name": "Concluir compra - sem carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Não foi encontrado carrinho para esse usuário\");",
									"});",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/concluir-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"concluir-compra"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}